///////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 1. Вам дана переменная a. Если переменная a равна 10, то 
// выведите 'Верно', иначе выведите 'Неверно'.
// let a = 11

// if (a === 10) {
//   console.log("Верно");
// } else {
//   console.log("Неверно");
// }

// 2. Вам даны две переменные a=50, b=100. Составьте условие,
// по которому в консоль будет выводиться 'a больше b',
// 'a меньше b'.
// let a = 50
// let b = 100

// if(a > b) {
//     console.log(a);
// } else if(a < b) {
//     console.log(b);
// } else {
//     console.log("=");
// }

// 3. Вам дана переменная a=-2. Составьте условие,
// по которому в консоль будет выводиться 'positive' - если
// число больше 0, 'равно' если число равно 0, "negative" если
// число меньше 0.
// let arr = -1

// if(arr < 0) {
//     console.log("positive");
// } else if(arr == 0) {
//     console.log("negative");
// } else {
//     console.log("0");
// }



// 4. Вам дана переменная number=45. Составьте условие, по
// которому будет выводиться в консоль "Четное число",
// "Нечетное число".
// let number = 45;

// if(number %2 === 0) {
//     console.log("Четное число");
// } else if(number %2 !== 0) {
//     console.log("Нечетное число");
// }

// 5. Вам даны две переменные a=10, b=2. Составьте условие,
// по которому, остаток деления a на b, будет выводиться
// консоль "Четное число", "Нечетное число".
// let a = 18;
// let b = 2

// if((a / b) %2 === 0  ) {
//     console.log("Четное число");
// } else  {
//     console.log("Нечетное число");
// }

// 6. Вам дана переменная s. Составьте условие, по которому
// в консоль будет выводится тип этой переменной - "boolean",
// "number", "string".
// let s = []

// if(typeof s === "boolean" || typeof s === "number" || typeof s === "string") {
//     console.log(s);
// }

// console.log(typeof s);


// Вам дана переменная let age = укажите возраст
//  • Если возраст от 1 до 13: посоветуйте ваш любимый мультфильм.
//  • Если возраст от 14 до 17: посоветуйте приключенческий фильм.
//  • Если возраст от 18 и выше: посоветуйте серьезный фильм.
//  • Если пользователь ввел неверный возраст, сообщите ему об ошибке.
// Пример ввода:
// let age = 11;

// if (age >= 1 &&  age <=13) {
//     console.log("любимый Тачки");
// } else if (age > 14 && age <=17) {
//     console.log("приключенческий Форсаж");
// } else if (age > 18 && age <=90) {
//     console.log("серьезный Пила");
// } else {
//     console.log("сообщите ему об ошибке");
// }

 
 //• Сколько вам лет?
//  • 18
//  • Посмотрите фильм "Пролетая над гнездом кукушки"
// Указания:
//  • Вы можете придумать больше градаций возрастов и фильмов
//  • Задание необходимо выполнить с помощью if ... else if ... else





////////////////////////////////////////////////////////////////////////////////////////////////
// 1  Дан массив ['a', 'b', 'c']. Добавьте ему в конец элементы 1, 2, 3.
// let arr = ['a', 'b', 'c'];
// arr.push(1, 2, 3)
// console.log(arr);

// 2 Даны два массива: [1, 2, 3] и [4, 5, 6]. Объедините их вместе.
// let arr = [1, 2, 3];
// let str =  [4, 5, 6]
// console.log(arr.concat(str));

// 3 Дан массив [1, 2, 3]. Добавьте ему в конец элементы 4, 5, 6.
// let s = [1, 2, 3]
// s.push(4, 5, 6)
// console.log(s);

// 4 Дан массив [1, 2, 3]. Добавьте ему в начало элементы 4, 5, 6.
// let arr = [1, 2, 3];
// arr.unshift(4, 5, 6)
// console.log(arr);

// 5 Дан массив ['js', 'css', 'jq']. Выведите на экран первый элемент.
// let a = ['js', 'css', 'jq'];
// console.log(a[0])

// 6 Дан массив ['js', 'css', 'jq']. Выведите на экран последний элемент.
// let a = ['js', 'css', 'jq'];
// console.log(a[a.length -1])

// 7  Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в
// новый элементы [1, 2, 3].
// let n = [1, 2, 3, 4, 5];
// console.log(n.slice(0, 3));

// 8  Дан массив [1, 2, 3, 4, 5]. С помощью метода slice запишите в новый
// элементы [4, 5].
// let arr = [1, 2, 3, 4, 5];
// console.log(arr.slice(3));

// 9  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice преобразуйте
// массив в [1, 4, 5].
// let arr = [1, 2, 3, 4, 5];
// arr.splice(1, 2)
// console.log(arr);

// 10  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice запишите в
// новый массив элементы [2, 3, 4].
// let arr = [1, 2, 3, 4, 5];
// console.log(arr.splice(1, 3));

// 11  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice сделайте из него
// массив [1, 2, 3, 'a', 'b', 'c', 4, 5].
// let arr = [1, 2, 3, 4, 5];
// arr.splice(3, 0, "a" , "c", "e" )
// console.log(arr);

// 12  Дан массив [1, 2, 3, 4, 5]. С помощью метода splice
// сделайте из него массив [1, 'a', 'b', 2, 3, 4, 'c', 5, 'e'].
// let a = [1, 2, 3, 4, 5];
// a.splice(1, 0, "a", "b", )
// a.splice(6, 0, "c")
// a.splice(8, 0, "e")
// console.log(a);


// Задание №2
// Дан массив ['а', 'б', 'в']. Добавьте ему в конец элементы 4,3,5,5.
// let a = ['а', 'б', 'в'];
// a.push(4, 3, 5, 5)
// console.log(a);

// Задание №3
// Дан массив ["Apple", "Orange", "Pinapple", "Cherry"]. 
//Удалите сначала первый элемент "Apple" и этот же элемент подставтье после "Pineapple".
// let arr = ["Apple", "Orange", "Pinapple", "Cherry"];
// arr.shift()
// arr.splice(2, 0, "Apple")
// console.log(arr);



// Дан массив ["Apple", "Orange", "Pinapple", "Cherry"].
// вырезать самый длинный элемент
// let str =  ["Apple", "Orange", "Pinapple", "Cherry"]
// let arr = str.reduce((acc, el) => {
//     if(acc.length > el.length) {
//         return acc
//     }
//     return el
// })
// console.log(arr);

// Задание №6
// const letters = ['a', 'b', 'c', 'd', 'e'];
// Удалить 3 элемента, начиная с индекса 2, и сохранить их в переменной 'removed'
// const letters = ['a', 'b', 'c', 'd', 'e'];
// let removed = letters.splice(2, 3)
// console.log(removed);
// console.log(letters);

// Задание №7
// const colors = ['red', 'green', 'blue'];
// Вставить 'yellow' и 'purple' перед индексом 1
// const colors = ['red', 'green', 'blue'];;
// colors.splice(1, 0, "yellow", "purple")
// console.log(colors);

// Задание №8
// const fruits = ['apple', 'banana', 'orange'];
// Заменить 1 элемент, начиная с индекса 1, на 'grape' и 'kiwi'
// const fruits = ['apple', 'banana', 'orange'];
// fruits.splice(1, 1, "kiwi", "grape")
// console.log(fruits);

// Задание №9
// const numbers = [1, 2, 3, 4, 5];
// Удалить 2 элемента, начиная с индекса 2

// let str = "dlroW olleH";
// вывести Hello World






// 1) Удвоение элементов массива
// Напишите функцию, которая принимает массив чисел и возвращает новый массив, в котором каждый элемент удвоен.
// function arr (number) {
//     return number.filter((el) => {
//         return el
//     })
// }

// console.log(arr([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));

// 2) Преобразование строк в верхний регистр
// function task2(str) {
//     return str.map((el) => {
//         return el.toUpperCase()
//     })
// }

// console.log(task2(["Marlen", "Asema", "Nuraiym", "Jibek", ]));

// Напишите функцию, которая принимает массив строк и возвращает новый массив, в котором каждая строка преобразована в верхний регистр.
// function task2(str) {
//     return str.map((el) => {
//         return el.toUpperCase()
//     })
// }

// console.log(task2(["Marlen", "Asema", "Nuraiym", "Jibek", ]));

// 3)  Вычисление суммы элементов массива. Напишите функцию, которая принимает массив чисел и возвращает сумму всех элементов.
// function arr (res) {
//     return res.reduce((acc, el) => {
//         return acc + el
//     })
// }

// console.log(arr([1, 2, 3, 4, 5, 6, 7, 8, 9]));

// 4) Фильтрация элементов массива
// Напишите функцию, которая принимает массив чисел и возвращает новый массив, содержащий только четные числа.
// function arr (a) {
//     return a.filter((el) => {
//         return el %2 === 0
//     })
// }

// console.log(arr([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));

// 5) Преобразование строк в числа
// Напишите функцию, которая принимает массив строк, содержащих числа, и возвращает новый массив, в котором каждая строка преобразована в число.
// function arr (n) {
//     return n.map((el) => {
//         return el
//     })
// }

// console.log(arr([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));

// 6) Напишите функцию, которая принимает массив чисел и возвращает новый массив, содержащий только четные числа.
// function arr (a) {
//     return a.filter((el) => {
//         return el %2 === 0
//     })
// }

// console.log(arr([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]));

// 7) Напишите функцию, которая принимает массив чисел и возвращает новый массив, содержащий только положительные числа. const numbers = [-2, -1, 0, 1, 2, 3, 4, 5];
// function task (number) {
//     return number.Math.abc((el) => {
//         return el
//     })
// }

// console.log(task([-2, -1, 0, 1, 2, 3, 4, 5]));

// 8) Напишите функцию, которая принимает массив строк и возвращает новый массив, содержащий только строки определенной длины. const words = ['apple', 'banana', 'cherry', 'date', 'elderberry'];
// const words = ['apple', 'banana', 'cherry', 'date', 'elderberry'];

// function arr (n) {
//     return n.map((el) => {
//         return el.length
//     })
// }

// console.log(arr(words));

// 9) Напишите функцию, которая принимает массив чисел и возвращает новый массив, содержащий только уникальные значения (без повторений). 
// 10) Фильтрация элементов, удовлетворяющих определенному условию
// Напишите функцию, которая принимает массив строк и возвращает новый массив, содержащий только элементы, которые начинаются с определенной буквы. const words = ['apple', 'banana', 'cherry', 'date', 'elderberry'];
// const words = ['apple', 'banana', 'cherry', 'date', 'elderberry'];

// function arr (m) {
//     return m.map((el) => {
//         return el[0]
//     })
// }

// console.log(arr(words));

// 11) Напишите функцию, которая принимает массив чисел и возвращает новый массив, содержащий только числа, которые больше определенного значения. const numbers = [10, 20, 30, 40, 50];
// const numbers = [10, 20, 30, 40, 50]

// function name1 (numbers) {
//     return numbers.filter((el) => {
//         return el >30
//     })
// }

// console.log(name1(numbers));

// 12) Напишите функцию, которая принимает массив строк и возвращает новый массив, содержащий только строки, состоящие только из заглавных букв. const words = ['APPLE', 'Banana', 'CHERRY', 'date', 'ELDERBERRY'];
// const words = ['APPLE', 'Banana', 'CHERRY', 'date', 'ELDERBERRY'];

// console.log(words.filter((el) => {
//     return el.toUpperCase() === el
// }));

// 13) Напишите функцию, которая принимает массив чисел и возвращает новый массив, содержащий только числа, которые являются четными и больше 5. const numbers = [2, 4, 6, 7, 8, 10, 11];
// const numbers = [2, 4, 6, 7, 8, 10, 11];

// function arr (a)  {
// return a.filter((el) => {
//     return el > 5 && el %2 === 0
// })
//   }



// console.log(arr(numbers));

// 14) Напишите функцию, которая принимает массив значений различных типов данных и возвращает новый массив, содержащий только значения определенного типа. const values = [1, 'apple', true, null, 'banana', 5, false];
// let s = []

// if(typeof s === "boolean" || typeof s === "number" || typeof s === "string") {
//     console.log(s);
// }

// console.log(typeof s);

// 15) Напишите функцию, которая принимает массив чисел и возвращает максимальное число из них. const numbers = [10, 5, 8, 3, 9];
// const numbers = [10, 5, 8, 3, 9];

// function task (numbers) {
//     return numbers.reduce((acc, el) => {
//         if (acc, el) {
//             return acc;
//         }
//         return el
//     })
// }

// console.log(task(numbers));

// 16) Напишите функцию, которая принимает массив строк и возвращает их объединение в одну строку. const words = ['Hello', ' ', 'world', '!'];
// function task (numbers) {
//     return numbers.join((el) => {
//         return el.split()
//     })
// }

// console.log(task([['Hello', ' ', 'world', '!']]));

// 17) Напишите функцию, которая принимает массив чисел и возвращает среднее значение.  const numbers = [2, 4, 6, 8, 10];
//  function foo (numbers) {
//     if (numbers.length === 0) {
//       return 0;
//     }
//     const mas = numbers.reduce((acc, current) => acc + current, 0);
//     const poo = mas / numbers.length;
//     return poo;
//   }
//   const numbers = [2, 4, 6, 8, 10];
//   const poo = foo (numbers);
//   console.log(`${poo}`);

// 18) Напишите функцию, которая принимает массив элементов и возвращает количество вхождений определенного элемента. const fruits = ['apple', 'banana', 'apple', 'cherry', 'apple'];
// let str = "apple"
//   let a = "a"
//   let arr = str.toLowerCase().
//   split("").filter((el) => {
//     return el === a
// }).length;
//   console.log(arr);

// 19) Напишите функцию, которая принимает массивы и возвращает их конкатенацию в один массив. 

// 20) Напишите функцию, которая принимает массив чисел и возвращает первое четное число из массива. const numbers = [1, 3, 5, 2, 4, 6, 7];
// const numbers = [1, 3, 5, 2, 4, 6, 7];

// function arr (n) {
//     return n.filter((el) => {
//         return el > 1 && el %2 === 0
//     })
// }

// console.log(arr(numbers));

// 21) Напишите функцию, которая принимает массив строк и возвращает первую строку определенной длины. const words = ['apple', 'banana', 'cherry', 'date'];

// function arr (number) {
//     return number.map((el) => el.length) 
//     }


// console.log(arr(['apple', 'banana', 'cherry', 'date']));


// 9) Напишите функцию, которая принимает массив чисел и возвращает новый массив, содержащий только уникальные значения (без повторений). 
// function task9(arr) {
//       return arr.filter ((el,index) => {
//         return index === arr.indexOf(el)
//       })
      
//     }
//     console.log(task9 ([1,1,2,2,3,3,3,4,4,5,5]));


// 22) Напишите функцию, которая принимает массив чисел и возвращает первое положительное число из массива. 



// 23) Напишите функцию, которая принимает массив строк и возвращает первый элемент, начинающийся с определенной буквы. const words = ['apple', 'banana', 'cherry', 'date'];
// const words = ['apple', 'banana', 'cherry', 'date'];


// function arr (m) {
//     return m.map((el) => {
//         return el[0]
//     })
// }

// console.log(arr(words));



///////////////////////////////////////////////////////////////////////////////////////////////////

// 1. Создайте объект obj = {a: 1, b: 2, c: 3}. Выведите длину ключей.
// let arr = {a: 1, b: 2, c: 3}
// console.log(Object.keys(arr).length);

// 2. Создайте объект obj = {a: 1, b: 2, c: 3}. Выведите на экран элемент с ключом 'c' двумя способами: через квадратные скобки и как свойство объекта.
// let  obj = {a: 1, b: 2, c: 3}
// console.log(obj["c"]);
// console.log(obj.c);

// 3. Создайте объект заработных плат obj = {Ширин: '1000', Айжан:'500', Атай: '200'}; Выведите на экран зарплату Атая и Ширин.
// const obj = {Ширин: '1000', Айжан:'500', Атай: '200'}
// console.log(obj.Атай);
// console.log(obj.Айжан);

// 4. Создайте объект заработных плат obj = {Ширин: '1000', Айжан:'500', Атай: '200'}. Измените зарплату Атая на 500.
//  let obj = {Ширин: '1000', Айжан:'500', Атай: '200'}
//   obj.Атай = "500"
//   console.log(obj);

// 5. Создайте объект заработных плат obj = {Ширин: '1000', Айжан:'500', Атай: '200'}. Добавьте к объекту ключ Медет со значением 1500.
//  const obj = {Ширин: '1000', Айжан:'500', Атай: '200'}
//  obj.Медет = "1500"
//  console.log(obj);

// 6. Создайте объект заработных плат obj = {Ширин: '1000', Айжан:'500', Атай: {salary: '500'}. Выведите значение ключа const words = ["APPLElary в консоль.
// const obj = {Ширин: '1000', Айжан:'500', Атай: {salary: '500'}}
// console.log(obj.Атай.salary);

// 7. Создайте объект с днями недели. Ключами в нем должны служить номера дней от начала недели (понедельник - первый и т.д.). Выведите на экран текущий день недели.
// const day = {
//     1: "пон",
//     2: "вт",
//     3: "ср",
//     4: "чт",
//     5: "пя",
//     6: "сб",
//     7: "вс"
// }

// console.log(day[1]);

// 8. Пусть теперь номер дня недели хранится в переменной day, например там лежит число 3. Выведите день недели, соответствующий значению переменной day.
// const day = {
//     1: "пон",
//     2: "вт",
//     3: "ср",
//     4: "чт",
//     5: "пя",
//     6: "сб",
//     7: "вс"
// }
// const day1 = 1
// console.log(day[day1]);

// 9. Создайте объект заработных плат obj = {Ширин: '1000', Айжан:'500', Атай: {salary: '500'}. Получите все ключи объекта.
// const obj = {Ширин: '1000', Айжан:'500', Атай: {salary: '500'}}
// console.log(Object.keys(obj));

// 10. Создайте объект заработных плат obj = {Ширин: '1000', Айжан:'500', Атай: {salary: '500'}. Получите все значения объекта.
// const obj = {Ширин: '1000', Айжан:'500', Атай: {salary: '500'}}
// console.log(Object.values(obj));

// 11. Создайте объект заработных плат obj = {Ширин: '1000', Айжан:'500', Атай: {salary: '500'}. Выведите все entries объекта.
// const obj = {Ширин: '1000', Айжан:'500', Атай: {salary: '500'}}
// obj.Атай = obj.Атай.salary
// console.log(Object.entries(obj));

// 12. Создайте функцию, передайте в нее объект {name: 'Igor'}. Выведите 1, если длина ключа name нечетная, 0 если четная.
// function n (obj) {
//     return obj.name.length %2
// }
// console.log(n({name: "Igor"}));

// 13. Создайте функцию, передайте в нее массив с объектами [ {id: 3}, {id: 5}, {id: 6}, {id: 7} ] . Выведите все id в консоль через map.
// function arr (array) {
//     return array.map((el) => {
//         return el.id
//     })
// }
// console.log(arr([ {id: 3}, {id: 5}, {id: 6}, {id: 7} ]));

// 14. Создайте функцию, передайте в нее объект {name: 'Igor'}. Добавьте новый ключ age со значением 25. Поменяйте значение name на Azat.
// function arr (obj) {
//     obj.age = "25"
//     obj.name = "Azat"
// return  obj
// }

// console.log(arr({name: 'Igor'}));

// 15. Вам дан объект product = {
// name: "headphones",
// price: 100,
// discount: 0
// }. Найдите стоимость объекта с ценой, и если она больше 100, снизьте ее на 10%. Если это не так, сделайте скидку на 7%. Обновите объект.
 
// const product = {
// name: "headphones",
// price: 100,
// discount: 0
// }

// if(product.price > 100  ) {
//     product.price = product.price - (product.price / 100) *10 
// } else 
// {product.price = product.price -(product.price / 100) * 7
// product.discount = 7
// }
// console.log(product);



// Сумма элементов массива: Найдите сумму всех элементов в массиве чисел и выведите результат.

// const arr = [3,6,8,2,5]
// const res = arr.reduce((acc,el) =>{
//     return acc + el
// },0)

// console.log(res);

// Поиск наименьшего элемента: Найдите наименьший элемент в массиве и выведите его значение.
// function arr(n){
//   if(n.length < 2){
//     const e = n[0];
//     n.splice(0, 1);
//     return arr([e, arr(n)])
//   } else {
//     return n[0] <= n[1] ? n[0] : n[1]
//   }
// }
// console.log(arr([1, 2, 3, 4, 5, 7, 8, 9]));



// const arr = [1, 2, 3, 4, 5, 6]
// const res = arr.reduce((acc, el) => Math.min(acc, el))
// console.log(res);

// Удвоение значений: Умножьте каждый элемент в массиве на 2, затем выведите новый массив.
// const res = [1, 2, 3 ,4]
// const arr = res.map(el => el *2 )

// console.log(arr);

// Фильтрация элементов: Создайте новый массив, содержащий только четные числа из данного массива.
// const arr = [1, 2, 3, 4, 5, 6, 7 ,8, 9]
// const res = arr.filter((el) => {
//     return el %2 ===0
// })
// console.log(res);

// Реверс массива: Измените порядок элементов в массиве так, чтобы они шли в обратном порядке.
// const arr = [9, 8, 7 , 6, 5, 4, 3, 2, 1]
// const res = arr.reverse()
// console.log(res);

// Удаление элемента по значению: Удалите первое вхождение заданного значения из массива.

// Сортировка в обратном порядке: Отсортируйте массив чисел в порядке убывания.
// const arr = [2, 1, 4, ,3, 5, 6, 7, 9]
// const res = arr.sort().reverse()
// console.log(res);

// Конкатенация массивов: Создайте новый массив, объединяя два заданных массива.
// const arr = ["Mar"]
// const ar = ["len"]
// console.log(arr + "" + ar);

// Сумма элементов на четных позициях: Найдите сумму элементов на четных позициях (индексах) массива.
// const arr = [1, 2, 3, 4, 5, 6, 7, 8]
// const res = arr.reduce((acc, el, index) => {
//     if(index %2 === 0) {
//         return acc + el
//     }
//     return acc
// })
// console.log(res);


// Нахождение индекса максимального элемента: Найдите индекс (позицию) максимального элемента в массиве.
// const arr = [1, 2, 3, 4, 5, 6]
// const res = arr.reduce((acc, el) => {
//     if(acc < el) {
//         return el
//     }
//     return acc
// })
// console.log(res);


// Удаление дубликатов: Удалите все дубликаты из массива, оставив только уникальные элементы.


// Обмен значениями: Поменяйте местами значения двух элементов в массиве.

// Сумма отрицательных чисел: Найдите сумму всех отрицательных чисел в массиве.

// Выделение четных и нечетных чисел: Разделите массив на два: один с четными числами, а другой с нечетными.

// Поиск элемента с наибольшей длиной: Найдите строку с самой большой длиной в массиве строк.nod